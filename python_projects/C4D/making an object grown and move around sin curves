import c4d
from math import sin, radians

def main():
    # Get the active document
    doc = c4d.documents.GetActiveDocument()

    # Get the current frame
    current_frame = doc.GetTime().GetFrame(doc.GetFps())

    # Check if the current frame is divisible by 5
    if current_frame % 5 == 0:
        # Find the Cube object by name
        cube = doc.SearchObject("Cube")

        if cube:
            # Calculate the angle in radians based on the frame
            t = radians(current_frame * 4)

            # Calculate the sine of the angle
            j = sin(t)

            # Get the current position
            current_position = cube.GetAbsPos()

            # Adjust the scale based on the sine wave
            scale_factor = 1.0 + j  # Adjust the amplitude (1.0 is the default scale)
            
            # Set the new scale
            cube.SetRelScale(c4d.Vector(scale_factor, scale_factor, scale_factor))

            # Update the scene
            c4d.EventAdd()

if __name__ == '__main__':
    main()
    
    
    
import c4d
from math import sin, radians

def main():
    # Get the active document
    doc = c4d.documents.GetActiveDocument()

    # Get the current frame
    current_frame = doc.GetTime().GetFrame(doc.GetFps())

    # Find the Cube object by name
    cube = doc.SearchObject("Cube")

    if cube:
        # Calculate the angle in radians based on the frame
        t = radians(current_frame * 4)

        # Calculate the sine of the angle for the scale
        j_scale = sin(t)

        # Calculate the sine of the angle for the helix movement
        j_helix = sin(t)

        # Get the current position
        current_position = cube.GetAbsPos()

        # Adjust the scale based on the sine wave
        scale_factor = 1.0 + j_scale  # Adjust the amplitude (1.0 is the default scale)
        
        # Set the new scale
        cube.SetRelScale(c4d.Vector(scale_factor, scale_factor, scale_factor))

        # Adjust the Y-coordinate for helix movement
        current_position.y += j_helix * 10.0  # Adjust the amplitude (10.0 is an arbitrary value)
        
        # Set the new position
        cube.SetAbsPos(current_position)

        # Update the scene
        c4d.EventAdd()

if __name__ == '__main__':
    main()
    
    
import c4d
from math import sin, cos, radians

def main():
    # Get the active document
    doc = c4d.documents.GetActiveDocument()

    # Get the current frame
    current_frame = doc.GetTime().GetFrame(doc.GetFps())

    # Find the Cube object by name
    cube = doc.SearchObject("Cube")

    if cube:
        # Calculate the angle in radians based on the frame
        t = radians(current_frame * 4)

        # Calculate the sine of the angle for the scale
        j_scale = sin(t)

        # Calculate the sine of the angle for the helix movement
        j_helix = sin(t)

        # Calculate the cosine of the angle for circular motion in the x-plane
        j_circle_x = cos(t)

        # Get the current position
        current_position = cube.GetAbsPos()

        # Adjust the scale based on the sine wave
        scale_factor = 1.0 + j_scale  # Adjust the amplitude (1.0 is the default scale)

        # Set the new scale
        cube.SetRelScale(c4d.Vector(scale_factor, scale_factor, scale_factor))

        # Adjust the Y-coordinate for helix movement
        current_position.y += j_helix * 10.0  # Adjust the amplitude (10.0 is an arbitrary value)

        # Adjust the X-coordinate for circular motion
        current_position.x += j_circle_x * 5.0  # Adjust the amplitude (5.0 is an arbitrary value)

        # Set the new position
        cube.SetAbsPos(current_position)

        # Update the scene
        c4d.EventAdd()

if __name__ == '__main__':
    main()

import c4d
from math import sin, radians

def main():
    doc = c4d.documents.GetActiveDocument()
    current_frame = doc.GetTime().GetFrame(doc.GetFps())
    #calls the current document and sets the variable current_frame = to
    # the current frame in the scene
    cube = doc.SearchObject("Cube")
    #searches for the cube object
    if cube:
        #if statement to manipulate the object if it is the cube
        t = radians(current_frame * 4)
        #sets a variable t = to the current frame but * it by 4
        j_scale = sin(t)
        if j_scale <= 0:
            j_scale *= -1
        # sets the j scale = to the sin wave with reference to the current frame
        # multiplies by -1 to remove all the negative values and avoid flipping object
        scale_factor = 5 * j_scale
        # sets a variable scale factor and multiplied for amplitude
        cube.SetRelScale(c4d.Vector(scale_factor, scale_factor, scale_factor))
        # creates a xyz vector and then uses it to set a relative scale
        c4d.EventAdd()
        #update the scene
if __name__=='__main__':
    main()
    