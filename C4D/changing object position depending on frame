def main():
    # Get the active document
    doc = c4d.documents.GetActiveDocument()
    
    # Get the current frame
    current_frame = doc.GetTime().GetFrame(doc.GetFps())

    # Check if the current frame is divisible by 5
    if current_frame % 5 == 0:
        # Find the Landscape object by name
        Figure = doc.SearchObject("Landscape")

        if Figure:
            # Get the current position
            current_position = Figure.GetAbsPos()

            # Increment the X-coordinate by 50 units
            new_z = current_position.z + 50

            # Set the new position
            Figure.SetAbsPos(c4d.Vector(current position.x, current_position.y, new_z))

            # Update the scene
            c4d.EventAdd()

if __name__=='__main__':
    
import c4d
from math import sin, radians

def main():
    doc = c4d.documents.GetActiveDocument()
    current_frame = doc.GetTime().GetFrame(doc.GetFps())

    cube = doc.SearchObject("Cube")
    if cube:
        t = radians(current_frame * 4)
        j_scale = sin(t)

        current_position = cube.GetAbsPos()
        current_position.y += j_scale * 10
        current_position.x += 2.00  # Increment x-coordinate
        if current_position.x == 720:
            current_position.x = 1
        cube.SetAbsPos(current_position)

        c4d.EventAdd()

if __name__=='__main__':
    main()
    
import c4d
from math import sin, cos, radians

def main():
    doc = c4d.documents.GetActiveDocument()
    current_frame = doc.GetTime().GetFrame(doc.GetFps())

    cube = doc.SearchObject("Cube")
    if cube:
        t = radians(current_frame * 4)
        circle_radius = 100  # Adjust the radius as needed
        circle_center = c4d.Vector(0, 0, 0)  # Adjust the center coordinates as needed
        current_position = cube.GetAbsPos()
        current_position.x = circle_center.x + (circle_radius * sin(t))
        current_position.y = circle_center.y + (circle_radius * cos(t))
        
        cube.SetAbsPos(current_position)
        
        c4d.EventAdd()

if __name__=='__main__':
    main()